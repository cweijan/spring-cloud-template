package ${packageName}.controller;

import java.util.List;
import java.util.Arrays;
import java.io.IOException;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ruoyi.common.log.annotation.Log;
import com.ruoyi.common.log.enums.BusinessType;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.${ClassName}Service;
import com.ruoyi.common.core.web.controller.BaseController;
import com.ruoyi.common.core.domain.R;
import com.ruoyi.common.core.utils.poi.ExcelUtil;
#if($table.crud || $table.sub)
import com.ruoyi.common.core.web.page.TableDataInfo;
#elseif($table.tree)
#end

/**
 * ${functionName}Controller
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${businessName}")
public class ${ClassName}Controller extends BaseController{
    @Autowired
    private ${ClassName}Service ${className}Service;

    /**
     * 查询${functionName}列表
     */
    @GetMapping("/list")
#if($table.crud || $table.sub)
    public TableDataInfo list(${ClassName} ${className}){
        startPage();
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return getDataTable(list);
    }
#elseif($table.tree)
    public R<${ClassName}> list(${ClassName} ${className}){
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return R.ok(list);
    }
#end

    /**
     * 导出${functionName}列表
     */
    @PostMapping("/export")
    @Log(title = "${functionName}", businessType = BusinessType.EXPORT)
    public void export(HttpServletResponse response, ${ClassName} ${className}){
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        ExcelUtil<${ClassName}> util = new ExcelUtil<${ClassName}>(${ClassName}.class);
        util.exportExcel(response, list, "${functionName}数据");
    }

    /**
     * 获取${functionName}详细信息
     */
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public R<${ClassName}> getInfo(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}){
        return R.ok(${className}Service.getById(${pkColumn.javaField}));
    }

    /**
     * 新增${functionName}
     */
    @PostMapping
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    public R<?> add(@RequestBody ${ClassName} ${className}){
        return R.ok(${className}Service.save(${className}));
    }

    /**
     * 修改${functionName}
     */
    @PutMapping
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    public R<?> edit(@RequestBody ${ClassName} ${className}){
        return R.ok(${className}Service.updateById(${className}));
    }

    /**
     * 删除${functionName}
     */
	@DeleteMapping("/{${pkColumn.javaField}s}")
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
    public R<?> remove(@PathVariable ${pkColumn.javaType}[] ${pkColumn.javaField}s){
        return R.ok(${className}Service.removeByIds(Arrays.asList(${pkColumn.javaField}s)));
    }
}
